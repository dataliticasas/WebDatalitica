---
interface Props {
  navigation: {
    href: string;
    text: string;
    title: string;
    secondary?: boolean;
  }[];

  socials: {
    href: string;
    icon: string;
  }[];
}

const { navigation, socials } = Astro.props;

const icons: { [key: string]: string } = {
  facebook: "/images/cc8.png",
  twitter: "/images/cs1.png",
  linkedin: "/images/do9.png",
  dribble: "/images/kg8.png",
  instagram: "/images/instagramIcon.png",
};
---

<nav class="md:shadow-md" id="navbar">
  <div class="mx-auto max-w-6xl px-4">
    <div class="relative flex h-16 items-center justify-between">
      <div class="absolute inset-y-0 right-0 flex items-center md:hidden">
        <button
          type="button"
          class="inline-flex items-center justify-center rounded-md p-2 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"
          aria-controls="mobile-menu"
          aria-expanded="false"
          id="mobile-menu-button"
        >
          <span class="sr-only">Open main menu</span>
          <svg
            id="open-icon"
            class="block h-6 w-6 text-primary"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"></path>
          </svg>
          <svg
            id="close-icon"
            class="hidden h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div
        class="flex flex-1 items-center justify-start md:items-stretch md:justify-between"
      >
        <div class="flex flex-shrink-0 items-center">
          <a href="/"
            ><img src="/images/cn8.png" alt="DATALITICA" width="200" /></a
          >
        </div>
        <div class="hidden md:ml-6 md:flex md:items-center">
          <div class="flex space-x-4">
            {
              navigation.map((el) => (
                <a
                  href={el.href}
                  class={
                    el.secondary
                      ? "flex rounded-md bg-primary px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm"
                      : "text-gray-500 hover:text-gray-600 rounded-md px-0 lg:px-3 py-2 text-base"
                  }
                  aria-current="page"
                >
                  {el.text}
                </a>
              ))
            }
            <a
              href="es"
              class="flex rounded-md bg-primary px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm"
              aria-current="page"
            >
              Español
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="hidden flex-col justify-between h-screen" id="mobile-menu">
    <div class="space-y-1 px-4 pb-3 pt-2">
      {
        navigation.map((el) => (
          <a
            href={el.href}
            class="flex justify-between items-center text-black py-2 text-base font-medium border-b-2 border-black"
            aria-current="page"
          >
            <span>{el.text}</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="hidden w-5 h-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M4.5 15.75l7.5-7.5 7.5 7.5"
              />
            </svg>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="block w-5 h-5"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M19.5 8.25l-7.5 7.5-7.5-7.5"
              />
            </svg>
          </a>
        ))
      }
      <div class="pt-2">
        <a
          href="/es"
          class="flex rounded-md bg-primary px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm"
          aria-current="page"
        >
          Español
        </a>
      </div>
    </div>
    <div class="flex justify-between items-center -translate-y-[100px] px-4">
      <div>Follow us</div>
      <div class="flex">
        {
          socials.map((el, i) => (
            <a
              href={el.href}
              rel="noreferrer"
              target="_blank"
              class={`${i !== socials.length - 1 && "mr-2"}`}
            >
              <img src={icons[el.icon]} width="24" />
            </a>
          ))
        }
      </div>
    </div>
  </div>
</nav>

<script>
  // const path = window.location.href.split("/").pop()!;
  const path = window.location.href.split("/")[3]!;
  const links = window.document.querySelectorAll("#navbar a")!;
  const mLinks = window.document.querySelectorAll("#mobile-menu a")!;
  links.forEach((link) => {
    if (link.getAttribute("href") === `/${path}`) {
      link.classList.add("text-gray-900");
    }
  });
  mLinks.forEach((link) => {
    if (link.getAttribute("href") === `/${path}`) {
      link.children[1].classList.remove("hidden");
      link.children[2].classList.remove("block");
      link.children[1].classList.add("block");
      link.children[2].classList.add("hidden");
    }
  });
  const el = window.document.querySelector("#mobile-menu-button")!;
  const menu = window.document.querySelector("#mobile-menu")!;
  const navbar = window.document.querySelector("#navbar")!;
  const openIcon = window.document.querySelector("#open-icon")!;
  const closeIcon = window.document.querySelector("#close-icon")!;
  el.addEventListener("click", () => {
    window.document.body.classList.toggle("overflow-hidden");
    menu.classList.toggle("hidden");
    menu.classList.toggle("flex");
    navbar.classList.toggle("h-screen");
    openIcon.classList.toggle("hidden");
    closeIcon.classList.toggle("hidden");
  });
  const bp = window.matchMedia("(min-width: 768px)");
  bp.addEventListener("change", (e) => {
    if (e.matches) {
      window.document.body.classList.remove("overflow-hidden");
      menu.classList.add("hidden");
      navbar.classList.remove("h-screen");
      openIcon.classList.remove("hidden");
      closeIcon.classList.add("hidden");
    }
  });
</script>
